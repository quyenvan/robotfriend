{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","container/ErrorBoundry.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","filterrobot","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gPAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAG,+BAA4BJ,EAA5B,iBAA+CK,IAAI,aAC3D,gCACI,6BAAKJ,IACL,4BAAIC,WCgBLI,EArBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAIf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAQ,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAQM,EAAOG,GAAGT,KAClBC,MAASK,EAAOG,GAAGR,OAHdQ,SCGlBC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,aACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAWC,OAAQ,kBAAmBC,OAAO,SAArE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,WACIC,KAAKC,SAAS,CAACF,UAAS,M,oBAG5B,WACI,OACKC,KAAKF,MAAMC,SACV,wDACAC,KAAKT,MAAMK,a,GAhBEM,aC6CZC,E,kDArCb,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IAaRa,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAcD,EAAME,OAAOC,SAb1C,EAAKV,MAAQ,CACXjB,OAAS,GACTyB,YAAc,KAJA,E,qDAQlB,WAAoB,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAA3B,GAAI,OAAE,EAAKkB,SAAS,CAACpB,OAAQE,S,oBAQrC,WAAS,IAAD,OACA8B,EAAcb,KAAKF,MAAMjB,OAAOiC,QAAO,SAAAC,GAC3C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS,EAAKnB,MAAMQ,YAAYU,kBAElE,OACA,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUvB,OAAQgC,e,GA9BVX,aCGHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.2e5f61a2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({id,name,email}) => {\r\n    return (\r\n        <div className= \"tc grow bg-light-green br3 pa2 ma2 dib bw2 shadow-5\">\r\n            <img src = {`https://robohash.org/${id}?size=250x250`} alt=\"robohash\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) =>{\r\n    // if(true){\r\n    //  throw new Error('asdasdaads');\r\n    // }\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (<Card \r\n                            key={i}\r\n                            id={robots[i].id} \r\n                            name = {robots[i].name}\r\n                            email = {robots[i].email}/> \r\n                        );\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className='pa1'>\r\n            <input\r\n                className='pa2 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='Robot name'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll' , border: '2px solid black', height:'640px' } }>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            (this.state.hasError) \r\n            ? <h1>Ooop! That is not good</h1>\r\n            : this.props.children \r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport './App.css';\nimport 'tachyons';\nimport CardList from '../component/CardList';\nimport SearchBox from '../component/SearchBox';\nimport Scroll from '../component/Scroll';\nimport ErrorBoundry from './ErrorBoundry';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      robots : [],\n      searchfield : ' '\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(user=>this.setState({robots: user}))\n  }\n  \n  onSearchChange = (event) => {\n    this.setState({searchfield : event.target.value});\n  }\n    \n\n  render(){\n    const filterrobot = this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return (\n    <div className='tc'>\n      <h1 className='f2'>ROBOTFRIEND</h1>\n      <SearchBox searchChange={this.onSearchChange}/>\n      <Scroll>\n        <ErrorBoundry>\n          <CardList robots={filterrobot}/>\n        </ErrorBoundry>\n      </Scroll>\n    </div>  \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}